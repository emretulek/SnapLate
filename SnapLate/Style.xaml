<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Global renk tanımları -->
    <Color x:Key="PrimaryColor">#643939</Color>
    <Color x:Key="PrimaryDarkColor">#372424</Color>
    <Color x:Key="SecondaryColor">#999999</Color>
    <Color x:Key="SecondaryDarkColor">#212121</Color>
    <Color x:Key="TextColor">#BBBBBB</Color>

    <!-- Global fırça tanımları (Brush) -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{DynamicResource PrimaryDarkColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{DynamicResource SecondaryColor}"/>
    <SolidColorBrush x:Key="SecondaryDarkBrush" Color="{DynamicResource SecondaryDarkColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource TextColor}"/>

    <!-- Button Default Style -->
    <Style x:Key="Button" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryDarkBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- MouseOver durumu için Trigger ekliyoruz -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="0,1">
                            <GradientStop Color="{DynamicResource PrimaryColor}" Offset="0" />
                            <!--<GradientStop Color="{DynamicResource PrimaryDarkColor}" Offset="1" />-->
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryDarkBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource PrimaryDarkColor}"></SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#region Combobox Style -->
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
          BorderBrush="{DynamicResource PrimaryDarkBrush}" 
          BorderThickness="0"
          Background="{DynamicResource PrimaryBrush}" />
            <Border Grid.Column="1" BorderBrush="{DynamicResource PrimaryDarkBrush}" Name="ButtonBorder"
          BorderThickness="0" 
          Background="{DynamicResource PrimaryBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
        HorizontalAlignment="Center" Fill="{DynamicResource TextBrush}"
        VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource PrimaryBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource TextBrush}"/>
                <Setter Property="RenderTransform" TargetName="Arrow">
                    <Setter.Value>
                        <RotateTransform Angle="180"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin" TargetName="Arrow" Value="0.5,0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource TextBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource TextBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBox"  TargetType="ComboBox">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                        ClickMode="Press" Focusable="False"
                        IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Template="{DynamicResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="6, 4, 24, 4" IsHitTestVisible="False"
                          HorizontalAlignment="Left" VerticalAlignment="Center"                              
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="4, 4, 24, 4"                     
                         IsReadOnly="{TemplateBinding IsReadOnly}"
                         Visibility="Hidden" Background="Transparent"
                         HorizontalAlignment="Left" VerticalAlignment="Center"
                         Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                       Focusable="False" AllowsTransparency="True"
                       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                       PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                            MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                            MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="{DynamicResource PrimaryBrush}" Margin="0, 1, 0, 0"
                                CornerRadius="0" BorderThickness="0" Padding="3"
                                BorderBrush="{DynamicResource SecondaryBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Combobox Style End-->
</ResourceDictionary>